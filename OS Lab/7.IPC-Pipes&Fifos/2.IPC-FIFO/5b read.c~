

  TITLE: Inter-process Communication (IPC) in Linux using FIFO.
on standard output


#include<stdio.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
#define MAX_BUF 1024


int main()
{
  int fd,fd1; 
  int words=0,string=0,lines=0,i=0,chars=0;
  char buffer[MAX_BUF];
  FILE *fp;
  
  char * myfifo="myfifo";
  char * myfifo1="myfifo1";
  
   mkfifo(myfifo1,0777);
   fd=open(myfifo,O_RDWR);
   read(fd,buffer,MAX_BUF);
   printf("Message recieved from input file is :%s \n",buffer);
 
 while(buffer[i]!='\0')
 {
    if(buffer[i]==' '|| buffer[i]=='\n')
       words++;
     else
       chars++;
     if(buffer[i]=='\n')
       lines++;
     
     i++;
 }//while
 
 printf("\nNo of Lines: %d",lines+1);
 printf("\nNo of Words: %d",words+1);
 printf("\nNo of Chars: %d",chars);
 
 fp=fopen("z.txt","w+");
 fprintf(fp,"\nNo of Lines: %d",lines+1);
 fprintf(fp,"\nNo of Words: %d",words+1);
 fprintf(fp,"\nNo of Chars: %d",chars);
 
 fclose(fp);
 close (fd);
 unlink(myfifo);//not being use further
 
 fd1=open(myfifo1,O_RDWR);
 system("cat test.txt>myfifo1");//display content from o/p source to terminal
 close(fd1);
 
 return 0;
}

